import java.util.*;

class MiObjeto implements Comparable<MiObjeto> {
    private String nombre;
    private Date fecha;
    // Otros campos relevantes

    // Constructor, getters, setters, etc.

    @Override
    public int compareTo(MiObjeto otro) {
        // Aquí decides qué campo usar para la comparación
        // Por ejemplo, ordenar por nombre
        return this.nombre.compareTo(otro.nombre);
    }

    // Implementación de un comparador flexible
    public static Comparator<MiObjeto> getComparator(String campo) {
        return (obj1, obj2) -> {
            switch (campo) {
                case "nombre":
                    return obj1.nombre.compareTo(obj2.nombre);
                case "fecha":
                    return obj1.fecha.compareTo(obj2.fecha);
                // Agrega más casos según tus necesidades
                default:
                    throw new IllegalArgumentException("Campo no válido: " + campo);
            }
        };
    }
}

public class Main {
    public static void main(String[] args) {
        List<MiObjeto> lista = new ArrayList<>();
        // Agrega objetos a la lista

        // Ordena por nombre
        Collections.sort(lista);

        // Ordena por fecha
        Collections.sort(lista, MiObjeto.getComparator("fecha"));
    }
}
